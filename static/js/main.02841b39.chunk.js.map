{"version":3,"sources":["components/Header/Header.js","components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","shapes/todoShape.js","components/ToggleAll/ToggleAll.js","components/Main/Main.js","components/FilterItem/FilterItem.js","components/TodosFilter/TodosFilter.js","components/Footer/Footer.js","components/TodoApp/TodoApp.js","App.js","index.js"],"names":["Header","state","value","handleAddTodo","event","key","target","setState","prevState","props","onAddTodo","handleOnChange","className","placeholder","this","onKeyDown","onChange","React","Component","TodoItem","editing","title","editInput","createRef","handleDoubleClick","completed","handleTodoChange","handleTodoChangeImplementation","saveTodo","cancelTodoEditing","handleTitleChange","id","current","focus","handleStatusChange","handleTodoRemove","type","checked","onDoubleClick","onClick","onBlur","ref","TodoList","PropTypes","shape","string","isRequired","number","bool","items","filter","map","todo","ToggleAll","allCompleted","handleToggleAll","htmlFor","Main","todos","notCompletedTodos","length","FilterItem","handleFilterStatusChange","activeFilter","filterValue","href","TodosFilter","item","Footer","todosAmount","handleCompletedRemove","TodoApp","storageName","notCompletedAmount","addTodo","todosLength","removeTodo","todoId","removedItemIsCompleted","removeCompleted","changeTodoStatus","updatedTodos","newStatus","find","updatedTodo","toggleEveryTodoStatus","allChecked","i","changeTodoTitle","changeFilterStatus","getNumOfNotCompletedTodos","updateStorage","window","localStorage","setItem","JSON","stringify","storedTodos","parse","getItem","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.02841b39.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Header extends React.Component {\n  state = {\n    value: '',\n  };\n\n  handleAddTodo = (event) => {\n    if (event.key === 'Enter' && event.target.value) {\n      this.setState((prevState) => {\n        this.props.onAddTodo(prevState.value);\n\n        return {\n          value: '',\n        };\n      });\n    }\n  };\n\n  handleOnChange = (event) => {\n    this.setState({\n      value: event.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <input\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          value={this.state.value}\n          onKeyDown={this.handleAddTodo}\n          onChange={this.handleOnChange}\n        />\n      </header>\n    );\n  }\n}\n\nexport { Header };\n\nHeader.propTypes = {\n  onAddTodo: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class TodoItem extends React.Component {\n  state = {\n    editing: false,\n    title: this.props.title,\n  };\n\n  editInput = React.createRef();\n\n  // todo: set focus for editing input - maybe needs refactor\n  componentDidUpdate() {\n    this.editInput.current.focus();\n  }\n\n  handleDoubleClick = () => {\n    this.setState({\n      editing: !this.props.completed,\n    });\n  };\n\n  handleTodoChange = (event) => {\n    this.setState({\n      title: event.target.value,\n    });\n  };\n\n  handleTodoChangeImplementation = (event) => {\n    if (event.key === 'Enter') {\n      this.saveTodo();\n    } else if (event.key === 'Escape') {\n      this.cancelTodoEditing();\n    }\n  };\n\n  saveTodo = () => {\n    this.setState((prevState) => {\n      this.props.handleTitleChange(this.props.id, prevState.title);\n\n      return {\n        editing: false,\n      };\n    });\n  };\n\n  cancelTodoEditing = () => {\n    this.setState({\n      editing: false,\n      title: this.props.title,\n    });\n  };\n\n  render() {\n    const { title, editing } = this.state;\n    const { completed, handleStatusChange, handleTodoRemove } = this.props;\n\n    return (\n      <li\n        className={`${\n          (completed && 'completed') || (editing && 'editing') || ''\n        }`}\n      >\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            // id={`todo-${this.props.id}`}\n            checked={completed}\n            onChange={handleStatusChange}\n          />\n          <label\n            // todo onclick preventDefault causes lint errors -_-\n            // htmlFor={`todo-${this.props.id}`}\n            // onClick={(event) => {\n            //   event.preventDefault();\n            // }}\n            onDoubleClick={this.handleDoubleClick}\n          >\n            {this.props.title}\n          </label>\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            onClick={handleTodoRemove}\n          />\n        </div>\n        <input\n          type=\"text\"\n          className=\"edit\"\n          value={title}\n          onChange={this.handleTodoChange}\n          onKeyDown={this.handleTodoChangeImplementation}\n          onBlur={this.saveTodo}\n          ref={this.editInput}\n        />\n      </li>\n    );\n  }\n}\n\nTodoItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  handleStatusChange: PropTypes.func.isRequired,\n  handleTitleChange: PropTypes.func.isRequired,\n  handleTodoRemove: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TodoItem } from '../TodoItem/TodoItem';\nimport { todoShape } from '../../shapes/todoShape';\n\nexport const TodoList = ({\n  items,\n  handleStatusChange,\n  handleTitleChange,\n  handleTodoRemove,\n  filter,\n}) => (\n  <ul className=\"todo-list\">\n    {items.map(todo => (\n      (filter === 'all' || (filter === 'active' && !todo.completed)\n        || (filter === 'completed' && todo.completed))\n      && (\n        <TodoItem\n          key={todo.id}\n          {...todo}\n          handleStatusChange={() => {\n            handleStatusChange(todo.id);\n          }}\n          handleTitleChange={handleTitleChange}\n          handleTodoRemove={() => {\n            handleTodoRemove(todo.id);\n          }}\n        />\n      )\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  items: PropTypes.arrayOf(todoShape).isRequired,\n  filter: PropTypes.string.isRequired,\n  handleStatusChange: PropTypes.func.isRequired,\n  handleTitleChange: PropTypes.func.isRequired,\n  handleTodoRemove: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport const todoShape = PropTypes.shape({\n  title: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  completed: PropTypes.bool.isRequired,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const ToggleAll = ({ allCompleted, handleToggleAll }) => (\n  <>\n    <input\n      type=\"checkbox\"\n      id=\"toggle-all\"\n      className=\"toggle-all\"\n      checked={allCompleted}\n      onChange={handleToggleAll}\n    />\n    <label htmlFor=\"toggle-all\">Mark all as complete</label>\n  </>\n);\n\nToggleAll.propTypes = {\n  allCompleted: PropTypes.bool.isRequired,\n  handleToggleAll: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TodoList } from '../TodoList/TodoList';\nimport { ToggleAll } from '../ToggleAll/ToggleAll';\nimport { todoShape } from '../../shapes/todoShape';\n\nexport const Main = ({\n  todos,\n  handleStatusChange,\n  handleTitleChange,\n  handleTodoRemove,\n  handleToggleAll,\n  notCompletedTodos,\n  filter,\n}) => (\n  <section className=\"main\">\n    {\n      todos.length > 0\n      && (\n        <ToggleAll\n          handleToggleAll={handleToggleAll}\n          allCompleted={!notCompletedTodos}\n        />\n      )\n    }\n\n    <TodoList\n      items={todos}\n      filter={filter}\n      handleStatusChange={handleStatusChange}\n      handleTitleChange={handleTitleChange}\n      handleTodoRemove={handleTodoRemove}\n    />\n  </section>\n);\n\nMain.propTypes = {\n  todos: PropTypes.arrayOf(todoShape).isRequired,\n  notCompletedTodos: PropTypes.number.isRequired,\n  filter: PropTypes.string.isRequired,\n  handleStatusChange: PropTypes.func.isRequired,\n  handleTitleChange: PropTypes.func.isRequired,\n  handleTodoRemove: PropTypes.func.isRequired,\n  handleToggleAll: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const FilterItem = ({\n  handleFilterStatusChange,\n  activeFilter,\n  filterValue,\n}) => (\n  <a\n    href={`#/${filterValue}`}\n    className={`${activeFilter === filterValue ? 'selected' : ''}`}\n    onClick={() => {\n      handleFilterStatusChange(filterValue);\n    }}\n  >\n    {filterValue}\n  </a>\n);\n\nFilterItem.propTypes = {\n  filterValue: PropTypes.string.isRequired,\n  activeFilter: PropTypes.string.isRequired,\n  handleFilterStatusChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FilterItem } from '../FilterItem/FilterItem';\n\nexport const TodosFilter = ({ handleFilterStatusChange, activeFilter }) => {\n  const filterStatusItems = ['all', 'active', 'completed'];\n\n  return (\n    <ul className=\"filters\">\n      {filterStatusItems.map(item => (\n        <li key={item}>\n          <FilterItem\n            filterValue={item}\n            handleFilterStatusChange={handleFilterStatusChange}\n            activeFilter={activeFilter}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nTodosFilter.propTypes = {\n  activeFilter: PropTypes.string.isRequired,\n  handleFilterStatusChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TodosFilter } from '../TodosFilter/TodosFilter';\n\nexport const Footer = ({\n  todosAmount,\n  notCompletedTodos,\n  handleCompletedRemove,\n  handleFilterStatusChange,\n  activeFilter,\n}) => (\n  <footer className=\"footer\">\n    <span className=\"todo-count\">\n      {notCompletedTodos}\n      {' '}\n      items left\n    </span>\n\n    <TodosFilter\n      handleFilterStatusChange={handleFilterStatusChange}\n      activeFilter={activeFilter}\n    />\n\n    {\n      todosAmount > notCompletedTodos\n      && (\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          onClick={handleCompletedRemove}\n        >\n          Clear completed\n        </button>\n      )\n    }\n  </footer>\n);\n\nFooter.propTypes = {\n  todosAmount: PropTypes.number.isRequired,\n  notCompletedTodos: PropTypes.number.isRequired,\n  activeFilter: PropTypes.string.isRequired,\n  handleCompletedRemove: PropTypes.func.isRequired,\n  handleFilterStatusChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { Header } from '../Header/Header';\nimport { Main } from '../Main/Main';\nimport { Footer } from '../Footer/Footer';\n\nexport class TodoApp extends React.Component {\n  storageName = 'hvb-todos';\n\n  state = {\n    todos: [],\n    notCompletedAmount: 0,\n    filter: 'all',\n  };\n\n  componentDidMount() {\n    const storedTodos\n      = JSON.parse(window.localStorage.getItem(this.storageName));\n\n    if (storedTodos) {\n      this.setState({\n        todos: storedTodos,\n        notCompletedAmount: this.getNumOfNotCompletedTodos(storedTodos),\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    this.updateStorage(this.state.todos);\n  }\n\n  addTodo = (title) => {\n    this.setState((prevState) => {\n      const todosLength = prevState.todos.length;\n      const updatedList = [...prevState.todos, {\n        title,\n        id: todosLength ? prevState.todos[todosLength - 1].id + 1 : 1,\n        completed: false,\n      }];\n\n      return {\n        todos: updatedList,\n        notCompletedAmount: prevState.notCompletedAmount + 1,\n      };\n    });\n  };\n\n  removeTodo = (todoId) => {\n    this.setState((prevState) => {\n      let removedItemIsCompleted;\n\n      const updatedTodos = [...prevState.todos].filter((todo) => {\n        if (todoId === todo.id) {\n          removedItemIsCompleted = todo.completed;\n        }\n\n        return todoId !== todo.id;\n      });\n\n      return {\n        todos: updatedTodos,\n        notCompletedAmount: prevState.notCompletedAmount\n          - +(!removedItemIsCompleted),\n      };\n    });\n  };\n\n  removeCompleted = () => {\n    this.setState(prevState => ({\n      todos: [...prevState.todos.filter(item => !item.completed)],\n    }));\n  };\n\n  changeTodoStatus = (todoId, completed) => {\n    this.setState((prevState) => {\n      const updatedTodos = [...prevState.todos];\n      const newStatus = completed\n        || !updatedTodos.find(todo => todoId === todo.id).completed;\n\n      updatedTodos.map((todo) => {\n        if (todoId === todo.id) {\n          const updatedTodo = todo;\n\n          updatedTodo.completed = newStatus;\n\n          return updatedTodo;\n        }\n\n        return todo;\n      });\n\n      return {\n        todos: updatedTodos,\n        notCompletedAmount: (newStatus) ? (prevState.notCompletedAmount - 1)\n          : (prevState.notCompletedAmount + 1),\n      };\n    });\n  };\n\n  toggleEveryTodoStatus = (event) => {\n    const allChecked = event.target.checked;\n\n    this.setState((prevState) => {\n      const updatedTodos = [...prevState.todos];\n\n      for (let i = 0; i < updatedTodos.length; i += 1) {\n        updatedTodos[i].completed = allChecked;\n      }\n\n      return {\n        todos: updatedTodos,\n        notCompletedAmount: allChecked ? 0 : updatedTodos.length,\n      };\n    });\n  };\n\n  changeTodoTitle = (todoId, value) => {\n    this.setState((prevState) => {\n      const updatedTodos = [...prevState.todos];\n\n      updatedTodos.map((todo) => {\n        if (todoId === todo.id) {\n          const updatedTodo = todo;\n\n          updatedTodo.title = value;\n\n          return updatedTodo;\n        }\n\n        return todo;\n      });\n\n      return {\n        todos: updatedTodos,\n      };\n    });\n  };\n\n  changeFilterStatus = (value) => {\n    this.setState({\n      filter: value,\n    });\n  };\n\n  // eslint-disable-next-line max-len\n  getNumOfNotCompletedTodos = todos => todos.filter(item => !item.completed).length;\n\n  updateStorage = (todos) => {\n    window.localStorage.setItem(\n      this.storageName,\n      JSON.stringify(todos),\n    );\n  };\n\n  render() {\n    const { todos, notCompletedAmount, filter } = this.state;\n\n    return (\n      <section className=\"todoapp\">\n        <Header onAddTodo={this.addTodo} />\n        <Main\n          todos={todos}\n          handleStatusChange={this.changeTodoStatus}\n          handleTitleChange={this.changeTodoTitle}\n          handleTodoRemove={this.removeTodo}\n          handleToggleAll={this.toggleEveryTodoStatus}\n          notCompletedTodos={notCompletedAmount}\n          filter={filter}\n        />\n        {\n          todos.length > 0\n          && (\n            <Footer\n              todosAmount={todos.length}\n              notCompletedTodos={notCompletedAmount}\n              handleCompletedRemove={this.removeCompleted}\n              handleFilterStatusChange={this.changeFilterStatus}\n              activeFilter={filter}\n            />\n          )\n        }\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport { TodoApp } from './components/TodoApp/TodoApp';\n\nfunction App() {\n  return (\n    <TodoApp />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}